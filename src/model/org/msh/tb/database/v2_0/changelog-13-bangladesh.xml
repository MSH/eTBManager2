<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

	<!-- Add specific permission to enable or disable the quarterly report on managment and medicine module -->
	<changeSet id="1" author="msantos">
		<!-- Insert specific row in the list of roles -->
		<insert tableName="userrole">
			<column name="id" valueNumeric="209"/>
			<column name="changeable" valueBoolean="false" />
			<column name="code" value="021007"/>
			<column name="role_name" value="CLOSED_QUARTER_EDIT" />
			<column name="internalUse" valueBoolean="false" />
			<column name="byCaseClassification" valueBoolean="false" />
			<column name="messageKey" value="quarter.editclosed" />
		</insert>
		
		<!-- Insert the permission to all profiles that start with the name "administ" -->
		<sql>
		INSERT INTO userpermission(canchange, canexecute, grantPermission, profile_id, role_id)
		SELECT false, true, true, id, 209 from userprofile
		WHERE name like "%administ%"
		AND NOT EXISTS(SELECT * FROM userpermission WHERE role_id=209 AND profile_id=userprofile.id)
		</sql>
	</changeSet>
	
	<changeSet id="13.2" author="rmemoria" context="BD">
 	    <insert tableName="tag">
 	        <column name="tag_name">TB case with no microscopy and culture result</column>
 	        <column name="workspace_id">11</column>
 	        <column name="sqlcondition">classification=0 and diagnosisType=1 and not exists(select * from examculture cult where cult.case_id=a.id) and not exists(select * from exammicroscopy mic where mic.case_id=a.id)</column>
 	        <column name="consistencycheck" type="int">1</column>
 	        <column name="active" type="int">1</column>
 	    </insert>
 	    <insert tableName="tag">
 	        <column name="tag_name">DR-TB case with no DST result</column>
 	        <column name="workspace_id">11</column>
 	        <column name="sqlcondition">classification=1 and diagnosisType=1 and not exists(select * from examdst exam where exam.case_id=a.id)</column>
 	        <column name="consistencycheck" type="int">1</column>
 	        <column name="active" type="int">1</column>
 	    </insert>

	    <sql>insert into tags_case (case_id, tag_id)
		select a.id, (select max(id) from tag where p.workspace_id=tag.workspace_id and tag_name='TB case with no microscopy and culture result') nv
		from tbcase a inner join patient p on p.id=a.patient_id and p.workspace_id=11
		where classification=0 and diagnosisType=1 and not exists(select * from examculture cult where cult.case_id=a.id) and not exists(select * from exammicroscopy mic where mic.case_id=a.id)</sql>
 	    

	    <sql>insert into tags_case (case_id, tag_id)
		select a.id, (select max(id) from tag where p.workspace_id=tag.workspace_id and tag_name='DR-TB case with no DST result') nv
		from tbcase a inner join patient p on p.id=a.patient_id and p.workspace_id=11 
		where classification=1 and diagnosisType=1 and not exists(select * from examdst exam where exam.case_id=a.id)</sql>
	    
	</changeSet>
	
	<changeSet id="13.3" author="MSANTOS">
	<sql>
		update casesideeffect cse
		set effectSt = DATE_ADD((select initreatmentdate from tbcase c1 where cse.case_id = c1.id), INTERVAl cse.se_month-1 MONTH)
		where cse.se_month is not null and cse.se_month != 0 and cse.effectst is null and
		cse.case_id in (select c2.id from tbcase c2 inner join patient p on p.id = c2.patient_id inner join workspace w on w.id = p.workspace_id where w.extension like 'bd')
	</sql>
	</changeSet>
	
	<!-- Solve duplicated patient number  reseting existings -->
	<changeSet id="13.4" author="MSANTOS" context="BD">
	<sql>
	update tbcase
	set validationState = 0,
	casenumber = null
	where exists (select * from patient p where tbcase.patient_id = p.id and recordnumber in(11854, 12180, 12413, 17965, 19644, 19651, 20420, 20998));
		
	update patient
	set recordnumber = null
	where recordnumber in(11854, 12180, 12413, 17965, 19644, 19651, 20420, 20998);	
	</sql>
	</changeSet>
	
	<!-- Revert last change -->
	<changeSet id="13.5" author="MSANTOS" context="BD">
	<sql>

	update patient set recordnumber = '11854' where id = 1077902;
	update patient set recordnumber = '11854' where id = 1077903;
	update patient set recordnumber = '12180' where id = 1078298;
	update patient set recordnumber = '12180' where id = 1078299;
	update patient set recordnumber = '12413' where id = 1078549;
	update patient set recordnumber = '12413' where id = 1078550;
	update patient set recordnumber = '17965' where id = 1084454;
	update patient set recordnumber = '17965' where id = 1084455;
	update patient set recordnumber = '19644' where id = 1086213;
	update patient set recordnumber = '19644' where id = 1086214;
	update patient set recordnumber = '19651' where id = 1086220;
	update patient set recordnumber = '19651' where id = 1086221;
	update patient set recordnumber = '20420' where id = 1087021;
	update patient set recordnumber = '20420' where id = 1087023;
	update patient set recordnumber = '20998' where id = 1087625;
	update patient set recordnumber = '20998' where id = 1087626;
	
	update tbcase
	set validationState = 1,
	casenumber = 1
	where tbcase.id in(1105413, 1105414, 1105812, 1105813, 1106065, 1106066, 1112013, 1112014, 1113783, 1113784, 1113790, 1113791, 1114595, 1114597, 1115201, 1115202);

	</sql>
	</changeSet>

	<!-- Solve a possible inconsistence on next version update -->
	<changeSet id="13.6" author="MSANTOS" context="BD">
		<sql>
			update tbunit set limitdatemedicinemovement = null where medmanstartdate is null
		</sql>
	</changeSet>
</databaseChangeLog>