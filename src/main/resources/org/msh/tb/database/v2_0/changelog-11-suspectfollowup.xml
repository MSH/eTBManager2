<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

	<!-- Update the new theme location -->
	<changeSet id="11.1" author="rmemoria">
		<!-- Insert specific row in the list of roles -->
		<insert tableName="userrole">
			<column name="id" valueNumeric="204"/>
			<column name="changeable" valueBoolean="false" />
			<column name="code" value="031000"/>
			<column name="role_name" value="SUSPECT_FOLLOWUP" />
			<column name="internalUse" valueBoolean="true" />
			<column name="byCaseClassification" valueBoolean="false" />
			<column name="messageKey" value="cases.suspect.followup" />
		</insert>
	</changeSet>


	<!-- ISSUES - Include a reference to the user unit -->
	<changeSet id="11.2" author="rmemoria">
	    <addColumn tableName="issue">
	        <column name="unit_id" type="int" >
	         	<constraints nullable="false" />
	        </column>
	    </addColumn>
	    
	    <addColumn tableName="issuefollowup">
	        <column name="unit_id" type="int" >
	         	<constraints nullable="false" />
	        </column>
	    </addColumn>

	    <addForeignKeyConstraint constraintName="fkissue_unit" 
		    referencedTableName="tbunit" referencedColumnNames="id" 
		    baseTableName="issue" baseColumnNames="unit_id"  onDelete="CASCADE" onUpdate="CASCADE"/>

	    <addForeignKeyConstraint constraintName="fkissuefollowup_unit" 
		    referencedTableName="tbunit" referencedColumnNames="id" 
		    baseTableName="issuefollowup" baseColumnNames="unit_id"  onDelete="CASCADE" onUpdate="CASCADE"/>
	    
	   	<dropForeignKeyConstraint baseTableName="issue" constraintName="fkissue_case"/>
	   	<dropForeignKeyConstraint baseTableName="issuefollowup" constraintName="fkissuefollowup_issue"/>
		<dropForeignKeyConstraint baseTableName="issue" constraintName="fkissue_user"/>
	   	<dropForeignKeyConstraint baseTableName="issuefollowup" constraintName="fkissuefollowup_user"/>

		<addForeignKeyConstraint constraintName="fkissuefollowup_issue" 
		    referencedTableName="issue" referencedColumnNames="id"
		    baseTableName="issuefollowup" baseColumnNames="issue_id" onDelete="CASCADE" onUpdate="CASCADE"/>

		<addForeignKeyConstraint constraintName="fkissue_case" 
		    referencedTableName="tbcase" referencedColumnNames="id" 
		    baseTableName="issue" baseColumnNames="case_id"  onDelete="CASCADE" onUpdate="CASCADE"/>
		<addForeignKeyConstraint constraintName="fkissue_user" 
		    referencedTableName="sys_user" referencedColumnNames="id" 
		    baseTableName="issue" baseColumnNames="user_id"  onDelete="CASCADE" onUpdate="CASCADE"/>
		<addForeignKeyConstraint constraintName="fkissuefollowup_user" 
		    referencedTableName="sys_user" referencedColumnNames="id" 
		    baseTableName="issuefollowup" baseColumnNames="user_id"  onDelete="CASCADE" onUpdate="CASCADE"/>
	</changeSet>


	<!-- Move data from validation issues to the new issue mechanism -->
	<changeSet id="11.3" author="rmemoria" >
	   	<sql>insert into issue (case_id, closed, user_id, creationdate, answerdate, title, description, unit_id)
			select a.case_id, c.validationstate=1, a.user_id, a.date,
			(select max(k.date) from caseissue k where k.case_id=a.case_id) lastdate,
			"Validation issue", a.description, a.unit_id
			from caseIssue a
			inner join tbcase c on c.id=a.case_id
			where a.date = (select min(b.date) from caseissue b where b.case_id=a.case_id)
			and a.unit_id is not null;
	   	</sql>

	   	<sql>insert into issuefollowup (issue_id, text, user_id, followupdate, unit_id)
			select b.id, a.description, a.user_id, a.date, a.unit_id
			from caseIssue a
			inner join issue b on b.case_id=a.case_id
			where a.date &gt; (select min(c.date) from caseissue c where c.case_id=a.case_id);
	   	</sql>

	   	<update tableName="tbcase">
	   	    <column name="validationstate" value="0" />
	   	    <where>validationstate not in (0,1)</where>
	   	</update>

	   	<dropTable tableName="caseissue"/>
	</changeSet>


	<!-- Include the permissions of case issues -->	
	<changeSet id="11.4" author="rmemoria">
	    <insert tableName="userrole">
			<column name="id" valueNumeric="205"/>
			<column name="changeable" valueBoolean="false" />
			<column name="code" value="011100"/>
			<column name="role_name" value="ISSUES" />
			<column name="internalUse" valueBoolean="false" />
			<column name="byCaseClassification" valueBoolean="false" />
			<column name="messageKey" value="cases.issues" />
	    </insert>
	    <insert tableName="userrole">
			<column name="id" valueNumeric="206"/>
			<column name="changeable" valueBoolean="false" />
			<column name="code" value="011101"/>
			<column name="role_name" value="NEW_ISSUE" />
			<column name="internalUse" valueBoolean="false" />
			<column name="byCaseClassification" valueBoolean="false" />
			<column name="messageKey" value="cases.issues.new" />
	    </insert>
	    <insert tableName="userrole">
			<column name="id" valueNumeric="207"/>
			<column name="changeable" valueBoolean="false" />
			<column name="code" value="011103"/>
			<column name="role_name" value="ANSWER_ISSUE" />
			<column name="internalUse" valueBoolean="false" />
			<column name="byCaseClassification" valueBoolean="false" />
			<column name="messageKey" value="userrole.ANSWER_ISSUE" />
	    </insert>
	    <insert tableName="userrole">
			<column name="id" valueNumeric="208"/>
			<column name="changeable" valueBoolean="false" />
			<column name="code" value="011104"/>
			<column name="role_name" value="CLOSEDEL_ISSUE" />
			<column name="internalUse" valueBoolean="false" />
			<column name="byCaseClassification" valueBoolean="false" />
			<column name="messageKey" value="userrole.CLOSEDEL_ISSUE" />
	    </insert>
		
		<!-- Insert the permission to all profiles that start with the name "administ" -->
		<sql>
		INSERT INTO userpermission(canchange, canexecute, grantPermission, profile_id, role_id)
		SELECT false, true, true, id, 205 from userprofile
		WHERE name like "%administ%"
		AND NOT EXISTS(SELECT * FROM userpermission WHERE role_id=205 AND profile_id=userprofile.id)
		</sql>

		<sql>
		INSERT INTO userpermission(canchange, canexecute, grantPermission, profile_id, role_id)
		SELECT false, true, true, id, 206 from userprofile
		WHERE name like "%administ%"
		AND NOT EXISTS(SELECT * FROM userpermission WHERE role_id=206 AND profile_id=userprofile.id)
		</sql>

		<sql>
		INSERT INTO userpermission(canchange, canexecute, grantPermission, profile_id, role_id)
		SELECT false, true, true, id, 207 from userprofile
		WHERE name like "%administ%"
		AND NOT EXISTS(SELECT * FROM userpermission WHERE role_id=207 AND profile_id=userprofile.id)
		</sql>

		<sql>
		INSERT INTO userpermission(canchange, canexecute, grantPermission, profile_id, role_id)
		SELECT false, true, true, id, 208 from userprofile
		WHERE name like "%administ%"
		AND NOT EXISTS(SELECT * FROM userpermission WHERE role_id=208 AND profile_id=userprofile.id)
		</sql>
	</changeSet>

	<!-- Include new tags to replace validation report that doesn't exist anymore -->
 	<changeSet id="11.5" author="rmemoria">
	    <sql>insert into tag (tag_name, workspace_id, sqlcondition, consistencycheck, active)
		select 'Not validated', id, 'validationstate=0', 1, 1 from workspace</sql>
		
	    <sql>insert into tags_case (case_id, tag_id)
		select a.id, (select max(id) from tag where p.workspace_id=tag.workspace_id and tag_name='Not validated') nv
		from tbcase a inner join patient p on p.id=a.patient_id where a.validationstate=0</sql>
	
	    <sql>insert into tag (tag_name, workspace_id, sqlcondition, consistencycheck, active)
		select 'Cases with open issues', id, 'exists(select * from issue where case_id=a.id and closed=0)', 1, 1 from workspace</sql>
		
	    <sql>insert into tags_case (case_id, tag_id)
		select a.id, (select max(id) from tag where p.workspace_id=tag.workspace_id and tag_name='Cases with open issues') nv
		from tbcase a inner join patient p on p.id=a.patient_id where exists(select * from issue where case_id=a.id and closed=0)</sql>
	</changeSet>
	
</databaseChangeLog>


